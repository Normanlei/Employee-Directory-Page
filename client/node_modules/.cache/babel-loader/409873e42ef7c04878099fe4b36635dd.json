{"ast":null,"code":"var _jsxFileName = \"/Users/normanlei/Desktop/Coding BC/HW/HW-15/Employee-Directory-Page/employeedirectory/client/src/components/Table/index.js\";\nimport React from \"react\";\nimport { useTable, useSortBy } from \"react-table\";\nimport \"./style.css\";\n\nfunction Table({\n  columns,\n  data\n}) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy);\n  return React.createElement(React.Fragment, null, React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, headerGroups.map(headerGroup => React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), headerGroup.headers.map(column => // Add the sorting props to control sorting. For this example\n  // we can add them into the header props\n  React.createElement(\"th\", Object.assign({}, column.getHeaderProps(column.getSortByToggleProps()), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), column.render('Header'), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : '')))))), React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), rows.map((row, i) => {\n    prepareRow(row);\n    return React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), row.cells.map(cell => {\n      return React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), cell.render('Cell'));\n    }));\n  }))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/normanlei/Desktop/Coding BC/HW/HW-15/Employee-Directory-Page/employeedirectory/client/src/components/Table/index.js"],"names":["React","useTable","useSortBy","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,aAApC;AACA,OAAO,aAAP;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAf,EAAkC;AAC9B,QAAM;AACJC,IAAAA,aADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA;AALI,MAMFT,QAAQ,CACV;AACEG,IAAAA,OADF;AAEEC,IAAAA;AAFF,GADU,EAKVH,SALU,CANZ;AAeA,SACE,0CACE,+CAAWI,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,YAAY,CAACG,GAAb,CAAiBC,WAAW,IAC3B,4CAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,IAC7B;AACA;AACA,8CAAQA,MAAM,CAACC,cAAP,CAAsBD,MAAM,CAACE,oBAAP,EAAtB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGF,MAAM,CAACG,MAAP,CAAc,QAAd,CADH,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,MAAM,CAACI,QAAP,GACGJ,MAAM,CAACK,YAAP,GACE,KADF,GAEE,KAHL,GAIG,EALN,CAHF,CAHD,CADH,CADD,CADH,CADF,EAsBE,+CAAWb,iBAAiB,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGE,IAAI,CAACE,GAAL,CACC,CAACU,GAAD,EAAMC,CAAN,KAAY;AACVZ,IAAAA,UAAU,CAACW,GAAD,CAAV;AACA,WACE,4CAAQA,GAAG,CAACE,WAAJ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGF,GAAG,CAACG,KAAJ,CAAUb,GAAV,CAAcc,IAAI,IAAI;AACrB,aACE,4CAAQA,IAAI,CAACC,YAAL,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA8BD,IAAI,CAACP,MAAL,CAAY,MAAZ,CAA9B,CADF;AAGD,KAJA,CADH,CADF;AAQE,GAXL,CADH,CAtBF,CADF,EAuCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCF,CADF;AA2CD;;AAED,eAAef,KAAf","sourcesContent":["import React from \"react\";\nimport { useTable, useSortBy } from \"react-table\";\nimport \"./style.css\";\n\nfunction Table({ columns, data }) {\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow,\n    } = useTable(\n      {\n        columns,\n        data,\n      },\n      useSortBy\n    )\n  \n  \n    return (\n      <>\n        <table {...getTableProps()}>\n          <thead>\n            {headerGroups.map(headerGroup => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                  // Add the sorting props to control sorting. For this example\n                  // we can add them into the header props\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {column.render('Header')}\n                    {/* Add a sort direction indicator */}\n                    <span>\n                      {column.isSorted\n                        ? column.isSortedDesc\n                          ? ' ðŸ”½'\n                          : ' ðŸ”¼'\n                        : ''}\n                    </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map(\n              (row, i) => {\n                prepareRow(row);\n                return (\n                  <tr {...row.getRowProps()}>\n                    {row.cells.map(cell => {\n                      return (\n                        <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                      )\n                    })}\n                  </tr>\n                )}\n            )}\n          </tbody>\n        </table>\n        <br />\n      </>\n    )\n  }\n\n  export default Table;"]},"metadata":{},"sourceType":"module"}