{"ast":null,"code":"export default{getAllEmployees:function getAllEmployees(){return new Promise(function(resolve,reject){fetch(\"/api/Employees\").then(function(response){return response.json();}).then(function(data){resolve(data);}).catch(function(err){return reject(err);});});},addEmployee:function addEmployee(newEmployee){return new Promise(function(resolve,reject){fetch(\"/api/add/Employees\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(newEmployee)}).then(function(response){return response.json();}).then(function(data){resolve(data);}).catch(function(err){return reject(err);});});}};","map":{"version":3,"sources":["/Users/normanlei/Desktop/Coding BC/HW/HW-15/Employee-Directory-Page/employeedirectory/client/src/utils/API.js"],"names":["getAllEmployees","Promise","resolve","reject","fetch","then","response","json","data","catch","err","addEmployee","newEmployee","method","headers","body","JSON","stringify"],"mappings":"AACA,cAAe,CACbA,eAAe,CAAE,0BAAW,CAC1B,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,KAAK,CAAC,gBAAD,CAAL,CACCC,IADD,CACM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADd,EAECF,IAFD,CAEM,SAAAG,IAAI,CAAI,CACZN,OAAO,CAACM,IAAD,CAAP,CACD,CAJD,EAKCC,KALD,CAKO,SAACC,GAAD,QAASP,CAAAA,MAAM,CAACO,GAAD,CAAf,EALP,EAMD,CAPM,CAAP,CAQD,CAVY,CAWbC,WAAW,CAAE,qBAAUC,WAAV,CAAuB,CAClC,MAAO,IAAIX,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,KAAK,CAAC,oBAAD,CAAsB,CACzBS,MAAM,CAAC,MADkB,CAEzBC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFgB,CAGzBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,WAAf,CAHmB,CAAtB,CAAL,CAKCP,IALD,CAKM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EALd,EAMCF,IAND,CAMM,SAAAG,IAAI,CAAI,CACZN,OAAO,CAACM,IAAD,CAAP,CACD,CARD,EASCC,KATD,CASO,SAACC,GAAD,QAASP,CAAAA,MAAM,CAACO,GAAD,CAAf,EATP,EAUD,CAXM,CAAP,CAYD,CAxBY,CAAf","sourcesContent":["\nexport default {\n  getAllEmployees: function() {\n    return new Promise((resolve, reject) => {\n      fetch(\"/api/Employees\")\n      .then(response => response.json())\n      .then(data => {\n        resolve(data);\n      })\n      .catch((err) => reject(err));\n    });\n  },\n  addEmployee: function (newEmployee) {\n    return new Promise((resolve, reject) => {\n      fetch(\"/api/add/Employees\",{\n        method:\"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newEmployee)\n      })\n      .then(response => response.json())\n      .then(data => {\n        resolve(data);\n      })\n      .catch((err) => reject(err));\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}