{"ast":null,"code":"export default {\n  getAllEmployees: function () {\n    return new Promise((resolve, reject) => {\n      fetch(\"/api/Employees\").then(response => response.json()).then(data => {\n        resolve(data);\n      }).catch(err => reject(err));\n    });\n  },\n  addEmployee: function (newEmployee) {\n    return new Promise((resolve, reject) => {\n      fetch(\"/api/Employees\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newEmployee)\n      }).then(response => response.json()).then(data => {\n        resolve(data);\n      }).catch(err => reject(err));\n    });\n  }\n};","map":{"version":3,"sources":["/Users/normanlei/Desktop/Coding BC/HW/HW-15/Employee-Directory-Page/employeedirectory/client/src/utils/API.js"],"names":["getAllEmployees","Promise","resolve","reject","fetch","then","response","json","data","catch","err","addEmployee","newEmployee","method","headers","body","JSON","stringify"],"mappings":"AACA,eAAe;AACbA,EAAAA,eAAe,EAAE,YAAW;AAC1B,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,MAAAA,KAAK,CAAC,gBAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZN,QAAAA,OAAO,CAACM,IAAD,CAAP;AACD,OAJD,EAKCC,KALD,CAKQC,GAAD,IAASP,MAAM,CAACO,GAAD,CALtB;AAMD,KAPM,CAAP;AAQD,GAVY;AAWbC,EAAAA,WAAW,EAAE,UAAUC,WAAV,EAAuB;AAClC,WAAO,IAAIX,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,MAAAA,KAAK,CAAC,gBAAD,EAAkB;AACrBS,QAAAA,MAAM,EAAC,MADc;AAErBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFY;AAGrBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,WAAf;AAHe,OAAlB,CAAL,CAKCP,IALD,CAKMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALlB,EAMCF,IAND,CAMMG,IAAI,IAAI;AACZN,QAAAA,OAAO,CAACM,IAAD,CAAP;AACD,OARD,EASCC,KATD,CASQC,GAAD,IAASP,MAAM,CAACO,GAAD,CATtB;AAUD,KAXM,CAAP;AAYD;AAxBY,CAAf","sourcesContent":["\nexport default {\n  getAllEmployees: function() {\n    return new Promise((resolve, reject) => {\n      fetch(\"/api/Employees\")\n      .then(response => response.json())\n      .then(data => {\n        resolve(data);\n      })\n      .catch((err) => reject(err));\n    });\n  },\n  addEmployee: function (newEmployee) {\n    return new Promise((resolve, reject) => {\n      fetch(\"/api/Employees\",{\n        method:\"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newEmployee)\n      })\n      .then(response => response.json())\n      .then(data => {\n        resolve(data);\n      })\n      .catch((err) => reject(err));\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}