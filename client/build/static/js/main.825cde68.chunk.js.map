{"version":3,"sources":["components/Wrapper/index.js","utils/API.js","components/Alert/index.js","components/Modal/index.js","components/Navbar/index.js","components/SearchForm/index.js","components/Container/index.js","components/Table/index.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","props","className","Promise","resolve","reject","fetch","then","response","json","data","catch","err","newEmployee","method","headers","body","JSON","stringify","Alert","role","type","style","width","margin","marginTop","children","AddMemberModal","useState","name","setName","gender","setGender","email","setEmail","phone","setPhone","department","setDepartment","imagePath","setImagePath","error","setData","success","imagedata","setImageData","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","htmlFor","placeholder","onChange","event","target","value","pattern","display","marginBottom","action","encType","onSubmit","preventDefault","FormData","resp","console","log","message","Footer","Button","onClick","onHide","image","API","errors","loadPage","Navbar","modalShow","setModalShow","variant","show","SearchForm","handleFormSubmit","handleInputChange","handleOptionChange","renderAllEmployee","list","Container","fluid","Table","columns","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","column","scope","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","path","getCellProps","src","height","App","employeesData","React","useMemo","accessor","employees","setEmployees","search","category","useEffect","newEmployees","filter","employee","toLowerCase","includes","length","opacity","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.825cde68.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","\nexport default {\n  getAllEmployees: function () {\n    return new Promise((resolve, reject) => {\n      fetch(\"/api/Employees\")\n        .then(response => response.json())\n        .then(data => {\n          resolve(data);\n        })\n        .catch((err) => reject(err));\n    });\n  },\n  addEmployee: function (newEmployee) {\n    return new Promise((resolve, reject) => {\n      fetch(\"/api/add/Employees\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newEmployee)\n      })\n        .then(response => response.json())\n        .then(data => {\n          resolve(data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  },\n  addImage: function (file) {\n    console.log(file);\n    return new Promise((resolve, reject) => {\n      fetch(\"/upload\", {\n        method: \"POST\",\n        enctype: \"multipart/form-data\",\n        body: file\n      })\n        .then(response => response.json())\n        .then(data => {\n          console.log(data)\n        })\n        .catch((err) => console.log(err));\n    });\n  }\n};\n","import React from \"react\";\n\nfunction Alert(props) {\n  return (\n    <div\n      role=\"alert\"\n      className={`alert alert-${props.type}`}\n      style={{ width: \"80%\", margin: \"0 auto\", marginTop: 18, ...props.style }}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport default Alert;\n","import React, { useState } from \"react\";\nimport { Button, Modal } from 'react-bootstrap';\nimport API from \"../../utils/API\";\nimport Alert from \"../Alert\";\n\n\nfunction AddMemberModal(props) {\n  const [name, setName] = useState();\n  const [gender, setGender] = useState(\"Male\");\n  const [email, setEmail] = useState();\n  const [phone, setPhone] = useState();\n  const [department, setDepartment] = useState(\"Full-Stack\");\n  const [imagePath, setImagePath] = useState();\n\n  const [data, setData] = useState({\n    error: \"\"\n  });\n\n  const [imagedata, setImageData] = useState({\n    success: \"\",\n    error: \"\"\n  });\n\n\n  let ran = 0;\n\n  const handleNameChange = event => {\n    setData({ error: \"\" });\n    setName(event.target.value);\n  };\n\n  const handleGenderChange = event => {\n    setGender(event.target.value);\n  };\n\n  const handleEmailChange = event => {\n    setData({ error: \"\" });\n    setEmail(event.target.value);\n  };\n\n  const handlePhoneChange = event => {\n    setData({ error: \"\" });\n    setPhone(event.target.value);\n  };\n\n  const handleDepartmentChange = event => {\n    setDepartment(event.target.value);\n  };\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!(name && email && phone)) {\n      setData({ error: \"Please Fulfil All the Query Inputs!\" });\n      return;\n    }\n    setImageData({ success: \"\", error: \"\" });\n    setData({ error: \"\" });\n    let newEmployee = {\n      name: name,\n      gender: gender,\n      email: email,\n      phone: phone,\n      department: department,\n      image: imagePath ? imagePath : \"blank-template.jpg\"\n    };\n    console.log(newEmployee);\n    API.addEmployee(newEmployee)\n      .then((data) => {\n        if (!data.errors) {\n          props.loadPage();\n          props.onHide();\n        } else {\n          setData({ error: data.message });\n        }\n      });\n  };\n\n  const handleSubmitImage = event => {\n    event.preventDefault();\n    fetch(event.target.action, {\n      method: 'POST',\n      encType: \"multipart/form-data\",\n      body: new FormData(event.target) // event.target is the form\n    }).then((resp) => {\n      return resp.json(); // or resp.text() or whatever the server sends\n    }).then((body) => {\n      console.log(body);\n      if (body.err) {\n        setImageData({ success: \"\", error: body.err });\n      } else {\n        setImagePath(body.name);\n        setImageData({ success: body.message, error: \"\" });\n      }\n    }).catch((error) => {\n      console.log(error);\n    });\n  };\n\n  const clearAlert = event => {\n    setImageData({ success: \"\", error: \"\" });\n  };\n\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Adding Employee\n          </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <form className=\"search form-group\">\n          <div className=\"form-group\">\n            <label htmlFor=\"language\">Name:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"First Name + Last Name\"\n              onChange={handleNameChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"gender\">Gender:</label>\n            <select className=\"gender form-control\" onChange={handleGenderChange}>\n              <option value=\"Male\">Male</option>\n              <option value=\"Female\">Female</option>\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"example@example.com\"\n              onChange={handleEmailChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"phone\">Phone:</label>\n            <input\n              type=\"tel\"\n              className=\"form-control\"\n              pattern=\"([0-9]{3})[0-9]{3}-[0-9]{4}\"\n              placeholder=\"Format:(123)456-7890\"\n              onChange={handlePhoneChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"department\">Department:</label>\n            <select className=\"department form-control\" onChange={handleDepartmentChange}>\n              <option value=\"Full-Stack\">Full-Stack</option>\n              <option value=\"Front-end\">Front-end</option>\n              <option value=\"Back-end\">Back-end</option>\n            </select>\n          </div>\n          <Alert type=\"danger\" style={{ display: data.error ? 'block' : 'none', marginBottom: 10 }}>\n            {data.error}\n          </Alert>\n        </form>\n        <form id=\"imageSubmit\" action=\"/upload\" method=\"POST\" encType=\"multipart/form-data\" onSubmit={handleSubmitImage}>\n          <div className=\"form-group\">\n            <label htmlFor=\"pic\">Upload Profile Image:</label>\n            <input type=\"file\" className=\"form-control-file\" name=\"userImage\" id=\"upload\" onChange={clearAlert}></input>\n          </div>\n          <button className=\"btn btn-success\" type=\"submit\">Upload(Upload Before Submit)</button>\n          <Alert type=\"danger\" style={{ display: imagedata.error ? 'block' : 'none', marginBottom: 10 }}>\n            {imagedata.error}\n          </Alert>\n          <Alert type=\"success\" style={{ display: imagedata.success ? 'block' : 'none', marginBottom: 10 }}>\n            {imagedata.success}\n          </Alert>\n        </form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n        <Button onClick={handleSubmit}>Submit</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default AddMemberModal;","import React from \"react\";\nimport \"./style.css\";\nimport AddMemberModal from \"../Modal\";\nimport { Button } from 'react-bootstrap';\n\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar({ modalShow, setModalShow, loadPage }) {\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <span className=\"navbar-brand\">\n        Sqwash\n      </span>\n      <div className=\"ml-auto\">\n        <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n          Add Employee\n        </Button>\n      </div>\n      <AddMemberModal\n        loadPage = {loadPage}\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./style.css\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchForm({ handleFormSubmit, handleInputChange, handleOptionChange, renderAllEmployee}) {\n\n\n  return (\n    <form className=\"search form-inline justify-content-center\">\n      <div className=\"form-group\">\n        <label htmlFor=\"language\">Search:</label>\n        <input\n          name=\"term\"\n          list=\"term\"\n          type=\"text\"\n          className=\"form-control mx-2\"\n          placeholder=\"search term\"\n          onChange = {handleInputChange}\n        />\n      </div>\n      <div className=\"form-group mx-3\">\n        <label htmlFor=\"category\">Search Category:</label>\n        <select className=\"category form-control mx-2\" onChange ={handleOptionChange}>\n          <option value=\"name\">Name</option>\n          <option value=\"email\">Email</option>\n          <option value=\"phone\">Phone</option>\n          <option value=\"department\">Department</option>\n        </select>\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary mx-3\" onClick={handleFormSubmit}>Search</button>\n      <button type=\"clear\" className=\"btn btn-danger mx-3\" onClick={renderAllEmployee}>clear</button>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`} {...props}/>;\n}\n\nexport default Container;\n","import React from \"react\";\nimport { useTable, useSortBy } from \"react-table\";\nimport \"./style.css\";\n\nfunction Table({ columns, data }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useSortBy\n  )\n\n\n  return (\n    <>\n      <table className=\"table table-striped table-borderless table-hover\" {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                // Add the sorting props to control sorting. For this example\n                // we can add them into the header props\n                <th scope=\"col\" {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render('Header')}\n                  {/* Add a sort direction indicator */}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? ' 🔽'\n                        : ' 🔼'\n                      : ''}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(\n            (row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    let name = cell.value?cell.value:\"blank-template.jpg\";\n                    let path = \"/uploads/\"+name;\n                    return (\n\n                      cell.column.Header === \"Image\" ?\n\n                        (<td {...cell.getCellProps()}><img className=\"img-responsive\" src={path}style={{width:'35px', height:'35px'}}></img></td>) :\n\n                        (<td {...cell.getCellProps()}>{cell.render('Cell')}</td>)\n\n\n                    )\n                  })}\n                </tr>\n              )\n            }\n          )}\n        </tbody>\n      </table>\n      <br />\n    </>\n  )\n}\n\nexport default Table;","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Wrapper from \"./components/Wrapper\";\nimport Navbar from \"./components/Navbar\";\nimport SearchForm from \"./components/SearchForm\";\nimport Container from \"./components/Container\";\nimport Table from \"./components/Table\";\nimport Alert from \"./components/Alert\";\nimport API from \"./utils/API\";\n\nfunction App() {\n  const [modalShow, setModalShow] = useState(false);\n  let employeesData = [];\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Image',\n        accessor: 'image',\n      },\n      {\n        Header: 'Name',\n        accessor: 'name',\n      },\n\n      {\n        Header: 'Gender',\n        accessor: 'gender',\n      },\n      {\n        Header: 'Email',\n        accessor: 'email',\n      },\n      {\n        Header: 'Phone',\n        accessor: 'phone',\n      },\n      {\n        Header: 'Department',\n        accessor: 'department',\n      },\n    ],\n    []\n  );\n  const [employees, setEmployees] = useState(employeesData);\n\n  const [data, setData] = useState({\n    search: \"\",\n    category: \"name\",\n    error: \"\"\n  });\n\n\n  useEffect(() => {   ///would be api call here\n    API.getAllEmployees()\n      .then(data => {\n        // eslint-disable-next-line\n        employeesData = data;\n        setEmployees(employeesData);\n      });\n  }, []);\n\n  const renderAllEmployee = () => {\n    API.getAllEmployees()\n      .then(data => {\n        employeesData = data;\n        setEmployees(employeesData);\n      })\n  };\n\n  const handleInputChange = event => {\n    setData({\n      search: event.target.value,\n      category: data.category,\n      error: \"\"\n    });\n  };\n\n  const handleOptionChange = event => {\n    setData({\n      search: data.search,\n      category: event.target.value,\n      error: \"\"\n    });\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    if (!data.search) {\n      setData({\n        search: data.search,\n        category: data.category,\n        error:\"Please Enter A Valid Query!!!\"\n      });\n      return;\n    }\n    const newEmployees = employees.filter(employee =>\n      employee[data.category].toLowerCase().includes(data.search.toLowerCase())\n    );\n    if (newEmployees.length===0) {\n      setData({\n        search: data.search,\n        category: data.category,\n        error:\"No Relevant Data Found!!!\"\n      });\n      return;\n    }\n    setEmployees(newEmployees);\n  };\n\n  return (\n    <Wrapper>\n      <Navbar modalShow={modalShow} setModalShow={setModalShow} loadPage={renderAllEmployee}></Navbar>\n      <Container>\n        <SearchForm\n          handleFormSubmit={handleFormSubmit}\n          handleInputChange={handleInputChange}\n          handleOptionChange={handleOptionChange}\n          renderAllEmployee={renderAllEmployee}\n        ></SearchForm>\n        <Alert type=\"danger\" style={{ opacity: data.error ? 1 : 0, marginBottom: 10 }}>\n          {data.error}\n        </Alert>\n        <Table columns={columns} data={employees}></Table>\n      </Container>\n    </Wrapper>\n  );\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}